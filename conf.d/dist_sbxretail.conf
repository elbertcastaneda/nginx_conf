server {
    listen  80;
    server_name  dist.sbxretail.com;
    rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
}

#lua_package_path '/usr/local/openresty/nginx/conf/conf.d/my_lua/?.lua;;';

server {
    listen  443;
    ssl on;

    server_name dist.sbxretail.com;
    root /srv/www/dist_files/;
    
    index index.php index.html;
    
    sendfile on;
    client_max_body_size  512m; # Max attachemnt size
    client_body_buffer_size 128m;
    send_timeout 1024s;

    location / {
        #autoindex on;
        #auth_basic "Restricted";
        access_by_lua_file "/usr/local/openresty/nginx/conf/conf.d/nginx-redmine-access/login.lua";
    }
    
    location /logout {
        default_type 'text/plain';
        content_by_lua '
            if not ngx.var.remote_user then
                ngx.redirect("/", ngx.HTTP_TEMPORARY_REDIRECT)
            else
                ngx.exit(ngx.HTTP_UNAUTHORIZED)
            end
        ';
    }

    location /elFinder {
        autoindex off;
    }

    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        include fastcgi.conf;
        fastcgi_intercept_errors on;
        fastcgi_pass php;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }

    location /authlua {
        default_type 'text/plain';
        content_by_lua '
            local name = ngx.var.arg_name or "Anonymous"
            local name2 = ngx.var.remote_user or "Anonymouss"
            ngx.say("Hello, ", name2, "!")
        ';
    }
    
    location = /luarocks {
    default_type 'text/plain';
        content_by_lua '
            local foo = require("foo")
            foo.say("hello, luarocks!")
        ';
    }

}
